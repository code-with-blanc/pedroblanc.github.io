{"version":3,"sources":["themes/muiTheme.tsx","themes/styledComponentsTheme.tsx","themes/ThemeProvider.tsx","redux/sketchStore/actions.ts","redux/sketchStore/reducer.ts","redux/rootReducer.js","redux/sketchStore/selectors.ts","features/toolbar/views/toolbar/toolbar.tsx","features/toolbar/index.js","features/toolbar/views/toolbar/index.js","common/FabAdd/FabAdd.tsx","features/sidebar/views/SketchRow/sketchRow.tsx","features/sidebar/views/SketchRow/index.js","features/sidebar/views/sketchList/sketchList.tsx","repository/sketch/sketchRepository.ts","repository/sketch/index.js","redux/sketchStore/operations.ts","features/sidebar/views/sketchList/index.js","features/sidebar/views/sidebar/sidebar.tsx","features/sidebar/index.js","features/sidebar/views/sidebar/index.js","repository/sketch/sketchProvider.tsx","features/editor/editor.tsx","features/editor/index.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["muiTheme","createMuiTheme","palette","type","primary","main","secondary","error","success","background","default","blueGrey","paper","theme","list","hover","ThemeProvider","props","styledComponentsTheme","children","setSketches","sketches","payload","INITIAL_STATE","selectedSketchId","reducer","state","action","filter","s","id","combineReducers","sketchStore","Sketch","currentSketch","find","Container","styled","div","Title","Toolbar","className","name","connect","Selectors","FabAdd","other","Fab","selected","Name","SketchRow","renderCount","this","onClick","sketch","React","Component","ListContainer","SketchList","map","i","key","setSelected","_sketches","code","SketchRepository","reduce","prevMax","push","fn","_listener","call","getSketches","dispatch","Repository","getAll","Actions","newSketch","create","setSelectedSketch","Sidebar","size","addSketch","Operations","count","createContext","Div","Editor","setCode","withSketch","onSketchUpdate","setState","updateCode","subscribe","console","log","App","store","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.68c92129.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\n\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n\n    primary: { main: '#89FFF5' },\n    secondary: { main: '#1A4CAF' },\n    error: { main: '#9B1D20' },\n    success: { main: '#98CE5A' },\n    background: {\n      default: blueGrey[900],\n      paper: blueGrey[700],\n    },\n  }\n});\n\nexport default muiTheme;\n","import muiTheme from './muiTheme';\n\nconst theme = {\n  palette: {\n    background: {\n      default: muiTheme.palette.background.default,\n    },\n    \n    list: {\n      background: muiTheme.palette.background.default,\n      hover: muiTheme.palette.background.paper,\n    }\n  }\n};\n\nexport default theme;\n","import React from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\n\nimport {} from 'styled-components';\n\nimport styledComponentsTheme from './styledComponentsTheme';\nimport muiTheme from './muiTheme';\n\ndeclare module 'styled-components' {\n  type Theme = typeof styledComponentsTheme;\n  export interface DefaultTheme extends Theme {}\n}\n\nconst ThemeProvider = (props : any) => {\n  return(\n    <StyledThemeProvider theme={styledComponentsTheme}>\n      <MuiThemeProvider theme={muiTheme}>\n        { props.children }\n      </MuiThemeProvider>\n    </StyledThemeProvider>\n  )\n}\n\nexport default ThemeProvider;\n","import { Sketch } from \"../../repository/sketch\";\n\n// Types\nexport const SET_SKETCHES = 'sketches/SET_SKETCHES';\nexport const ADD_SKETCH = 'sketches/ADD_SKETCH';\nexport const REMOVE_SKETCH = 'sketches/REMOVE_SKETCH';\nexport const SET_SELECTED = 'sketches/SET_SELECTED';\n\nexport interface SetSketchesAction {\n  type: typeof SET_SKETCHES;\n  payload: Sketch[];\n}\n\nexport interface AddSketchAction {\n  type: typeof ADD_SKETCH;\n  payload: Sketch;\n};\n\nexport interface RemoveSketchAction {\n  type: typeof REMOVE_SKETCH;\n  payload: number;\n}\n\nexport interface SetSelectedSketchIdAction {\n  type: typeof SET_SELECTED;\n  payload: number;\n}\n\nexport type SidebarActionTypes = \n  AddSketchAction | RemoveSketchAction | SetSelectedSketchIdAction | SetSketchesAction;\n\n/// Action Creators\n\nexport const setSketches = (sketches: Sketch []) : SetSketchesAction => {\n  return {\n    type: SET_SKETCHES,\n    payload: sketches,\n  }\n}\n\nexport const addSketch = (newSketch: Sketch) : AddSketchAction => {\n  return {\n    type: ADD_SKETCH,\n    payload: newSketch,\n  };\n};\n\nexport const removeSketch = (id: number) : RemoveSketchAction => {\n  return {\n    type: REMOVE_SKETCH,\n    payload: id,\n  }\n}\n\nexport const setSelectedSketchId = (id: number) : SetSelectedSketchIdAction => {\n  return {\n    type: SET_SELECTED,\n    payload: id,\n  }\n}\n","import { SketchStoreState } from \"./sketchStoreState\";\nimport {\n  SidebarActionTypes,\n  ADD_SKETCH, REMOVE_SKETCH, SET_SELECTED, SET_SKETCHES,\n} from \"./actions\";\n\nexport const INITIAL_STATE: SketchStoreState = {\n  sketches: [],\n  selectedSketchId: null,\n};\n\nconst reducer = (state = INITIAL_STATE, action: SidebarActionTypes): SketchStoreState => {\n  switch(action.type) {\n    case SET_SKETCHES:\n      return {\n        ...state,\n        sketches: action.payload,\n      }\n    case ADD_SKETCH:\n      return {\n          ...state,\n          sketches: [...state.sketches, action.payload],\n        };\n    case REMOVE_SKETCH:\n      return {\n        ...state,\n        sketches: state.sketches.filter(s => s.id !== action.payload)\n      }\n    case SET_SELECTED:\n      return {\n        ...state,\n        selectedSketchId: action.payload,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport * as Sketch from './sketchStore';\n\nexport default combineReducers({\n    sketchStore: Sketch.reducer,\n});\n","import { SketchStoreState } from \"./sketchStoreState\";\nimport { Sketch } from \"../../repository/sketch\";\n\nexport function currentSketch(state: SketchStoreState) : Sketch | null {\n  return state.sketches.find((s) => s.id === state.selectedSketchId) || null\n};\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  background-color: ${ props => props.theme.palette.background.default };\n\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  padding: 8px;\n  \n  font-size: 1.2em;\n  font-weight: 500;\n  color: white;\n`;\n\nconst Toolbar = (props: ToolbarProps) => {\n  return (\n    <Container className={props.className}>\n      <Title> { props?.name } </Title>\n    </Container>\n  )\n}\n\ninterface ToolbarProps {\n  className?: string;\n  name?: string;\n} \n\nexport default Toolbar;\n","import Toolbar from './views/toolbar';\n\nexport default Toolbar;","import { connect } from 'react-redux';\n\nimport * as Selectors from '../../../../redux/sketchStore/selectors';\n\nimport Toolbar from './toolbar';\n\nconst mapStateToProps = ({sketchStore}) => ({\n  name: Selectors.currentSketch(sketchStore)?.name,\n});\n\nexport default connect(mapStateToProps)(Toolbar);","import React from 'react'\n\nimport { Fab, FabProps } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\ninterface FabAddProps extends FabProps {\n  className?: string;\n}\n\nconst FabAdd = ({ className, ...other }: FabAddProps) => (\n  <Fab className={className} {...other}>\n    <AddIcon />\n  </Fab>\n);\n\n\nexport default FabAdd;","import React from 'react'\nimport styled from 'styled-components';\n\nimport { Sketch } from '../../../../repository/sketch';\n\ninterface SketchRowProps {\n  sketch: Sketch;\n  selected?: Boolean;\n  onClick?: any;\n};\n\nconst Container = styled('div')<{selected?: Boolean} & React.HTMLAttributes<HTMLDivElement>>`\n  width: 100%;\n  min-height: 48px;\n\n  color: white;\n  cursor: pointer;\n\n  background-color: ${({selected, theme}) => (\n    selected ?\n      theme.palette.list.hover\n      : theme.palette.list.background\n  )};\n\n  :hover {\n    background-color: ${ props => props.theme.palette.list.hover };\n  }\n`;\n\nconst Name = styled.div`\n  padding: 6px;\n  padding-left: 8px;\n\n  color: white;\n  font-size: 1em;\n  font-weight: 500;\n`;\n\nclass SketchRow extends React.Component<SketchRowProps> {\n  renderCount : number = 0;\n\n  render() {\n    this.renderCount += 1;\n\n    return (\n      <Container onClick={this.props.onClick} selected={this.props.selected}>\n        <Name>{this.props.sketch.name}</Name>\n      </Container>\n    )\n  };\n\n}\n\nexport default SketchRow;\n","import SketchRow from './sketchRow';\n\nexport default SketchRow;","import React from 'react'\n\nimport SketchRow from '../SketchRow';\nimport { Sketch } from '../../../../repository/sketch';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  height: 100%;\n  overflow-y: auto;\n`;\n\nexport const SketchList = (props: SketchListProps) => {\n  return (\n    <ListContainer>\n      <div>\n        {props.sketches?.map((s, i) => (\n          <SketchRow\n            sketch={s} key={i}\n            selected={ s.id === props.selectedSketchId }\n            onClick={() => props.setSelected(s.id)}\n          />\n        ))}\n      </div>\n    </ListContainer>\n  )\n}\n\ninterface SketchListProps {\n  sketches: Sketch[];\n  selectedSketchId: number;\n  setSelected: (id: number) => void;\n}\n\nexport default SketchList;\n","import { Sketch } from \"./sketch\";\n\nlet _sketches : Sketch[] = [\n  {\n    id: 0,\n    name: \"Tutorial\",\n    code: \"// TODO: write a tutorial\",\n  },\n  {\n    id: 1,\n    name: \"My Sketch 1\",\n    code: \"// Write your code here\",\n  }\n];\n\nclass SketchRepository {\n  public static getAll() : Sketch [] {\n    return [ ..._sketches ];\n  }\n\n  public static create() : number {\n    const maxId = _sketches.reduce((prevMax, sketch) => {\n      return (sketch.id > prevMax) ? sketch.id : prevMax;\n    }, 0);\n    const id = maxId + 1;\n\n    _sketches.push({\n      id: id,\n      name: `New Sketch (${id})`,\n      code: '',\n    })\n\n    return id;\n  }\n\n\n  static _listener : Function | null = null;\n  public static subscribe(fn: (sketch: Sketch) => void) {\n    SketchRepository._listener = fn;\n    SketchRepository._listener?.call(null, _sketches[0]);\n  }\n\n  public static updateCode(code: string) {\n    _sketches[0].code = code;\n    SketchRepository._listener?.call(null, _sketches[0]);\n  }\n}\n\nexport default SketchRepository;\n","import { Sketch } from './sketch';\nimport SketchRepository from './sketchRepository';\n\nexport { Sketch };\nexport default SketchRepository;","import * as Actions from './actions';\n\nimport Repository from '../../repository/sketch';\n\nexport const getSketches = (dispatch: Function) => () => {\n  const sketches = Repository.getAll();\n\n  dispatch(Actions.setSketches(sketches));\n}\n\nexport const newSketch = (dispatch : Function) => () => {\n  Repository.create();\n  const sketches = Repository.getAll()\n\n  dispatch(Actions.setSketches(sketches));\n};\n\nexport const setSelectedSketch = (dispatch: Function) => (id: number) => {\n  dispatch(Actions.setSelectedSketchId(id));\n}\n","import { connect } from 'react-redux';\n\nimport SketchList from './sketchList';\n\nimport { setSelectedSketch } from '../../../../redux/sketchStore/operations';\n\nconst mapStateToProps = ({ sketchStore }) => ({\n  sketches: sketchStore.sketches,\n  selectedSketchId: sketchStore.selectedSketchId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelected: (id) => setSelectedSketch(dispatch)(id),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SketchList);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { FabAdd } from '../../../../common';\n\nimport SketchList from '../sketchList';\n\nconst Container = styled.div`\n  position: relative;\n  height: 100%;\n  overflow-y: hidden;\n\n  background-color: ${ props => props.theme.palette.background.default };\n\n  .fab {\n    position: absolute;\n    bottom: 48px;\n    right: 36px;\n    \n    padding: 10px;\n  }\n`;\n\nclass Sidebar extends React.Component {\n  props: SidebarProps;\n  \n  constructor(props: SidebarProps) {\n    super(props);\n    this.props = props;\n\n    this.props.getSketches();\n  }\n\n  render() {\n    return (\n      <Container className={this.props.className}>\n        <SketchList />\n\n        <FabAdd\n          className=\"fab\"\n          size=\"small\"\n          onClick={ () => this.props.addSketch() }\n        />\n      </Container>\n    );\n  }\n}\n\ninterface SidebarProps {\n  className: string;\n  addSketch: () => void;\n  getSketches: () => void;\n}\n\nexport default Sidebar;\n","import Sidebar from './views/sidebar';\n\nexport default Sidebar;\n","import { connect } from 'react-redux';\n\nimport Sidebar from './sidebar';\nimport * as Operations from '../../../../redux/sketchStore/operations';\n\nconst mapStateToProps = ({ sketchStore }) => ({\n  sketches: sketchStore.sketches,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addSketch: Operations.newSketch(dispatch),\n  getSketches: Operations.getSketches(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React from 'react'\nimport { Sketch } from './sketch';\nimport SketchRepository from '.';\n\nconst SketchContext = React.createContext<InjectedSketchProps | null>(null);\n\nexport interface InjectedSketchProps {\n  sketch: Sketch;\n  setCode: (code : string) => void;\n}\n\ninterface State {\n  sketch: Sketch | null;\n}\n\nexport const useSketch = () => React.useContext(SketchContext);\n\nexport const withSketch = <P extends InjectedSketchProps>(\n  Component: React.ComponentType<P>\n) =>\nclass MakeCounter extends React.Component<P, State> {\n  state: State = {\n    sketch: null,\n  };\n\n  onSketchUpdate = (sketch: Sketch) => {\n    this.setState({\n      sketch\n    })\n  };\n\n  setCode = (code: string) => { SketchRepository.updateCode(code) }\n\n  componentDidMount() {\n    SketchRepository.subscribe(this.onSketchUpdate);\n  }\n\n  render() {\n    console.log(this.state.sketch)\n    return (\n      <Component\n        count={++count}\n        sketch={this.state.sketch}\n        setCode={this.setCode}\n        {...this.props as P}\n      />\n    );\n  }\n};\n\n\nlet count = 0;\n","import React, { Component } from 'react'\nimport styled from 'styled-components';\n\n// import MySimpleEditor from './mySimpleEditor/mySimpleEditor';\nimport { withSketch, InjectedSketchProps } from '../../repository/sketch/sketchProvider';\n\ninterface EditorProps extends InjectedSketchProps {\n  className?: string;\n  count?: number;\n}\n\nconst Div = styled.div`\n  background-color: ${ props => props.theme.palette.background.default };\n`;\n\nclass Editor extends Component<EditorProps> {\n  props: EditorProps = {\n    count: -99,\n    sketch: { id: 42, name: '', code: 'init'},\n    setCode: () => {},\n  }\n  \n  render() {\n    return (\n      <Div className={this.props.className}>\n        {/* <MySimpleEditor\n          value = {this.props?.sketch?.code}\n          onValueChange = {(value) => { this.props.setCode(value) }}\n        /> */}\n      </Div>\n    )\n  }\n}\n\nexport default withSketch(Editor);\n","import { connect } from 'react-redux';\n\nimport * as Selectors from '../../redux/sketchStore/selectors';\nimport * as Operations from '../../redux/sketchStore/operations';\n\nimport Editor from './editor';\n\nconst mapStateToProps = ({ sketchStore }) => ({\n  sketch: Selectors.currentSketch(sketchStore),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSketches: Operations.getSketches(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ThemeProvider from './themes/ThemeProvider';\n\nimport configureStore from './redux/store';\n\nimport Toolbar from './features/toolbar';\nimport Sidebar from './features/sidebar';\nimport Editor from './features/editor';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={configureStore()}>\n      <ThemeProvider>\n        <div className=\"App\">\n          <Toolbar className=\"toolbar\" />\n          \n          <Editor className=\"editor\"/>\n          <Sidebar className=\"sidebar\" />\n        </div>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nexport default function configureStore() {\n    return createStore(rootReducer);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}