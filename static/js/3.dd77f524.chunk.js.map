{"version":3,"sources":["../node_modules/fsevents/fsevents.js","../node_modules/fsevents/fsevents.node"],"names":["process","platform","Error","Native","require","events","constants","getFileType","flags","ItemIsFile","ItemIsDir","ItemIsSymlink","getEventType","ItemRemoved","ItemRenamed","ItemCreated","ItemModified","RootChanged","ItemCloned","obj","key","anyIsTrue","getFileChanges","inode","ItemInodeMetaMod","finder","ItemFinderInfoMod","access","ItemChangeOwner","xattrs","ItemXattrMod","exports","watch","path","handler","TypeError","instance","start","result","Promise","resolve","then","stop","undefined","getInfo","event","type","changes","module"],"mappings":"0HAAA,YAQA,GAAyB,WAArBA,EAAQC,SACV,MAAM,IAAIC,MAAJ,6DAAgEF,EAAQC,SAAxE,MAGR,IAAME,EAASC,EAAQ,MACjBC,EAASF,EAAOG,UA+BtB,SAASC,EAAYC,GACnB,OAAIH,EAAOI,WAAaD,EAAc,OAClCH,EAAOK,UAAYF,EAAc,YACjCH,EAAOM,cAAgBH,EAAc,eAAzC,EAQF,SAASI,EAAaJ,GACpB,OAAIH,EAAOQ,YAAcL,EAAc,UACnCH,EAAOS,YAAcN,EAAc,QACnCH,EAAOU,YAAcP,EAAc,UACnCH,EAAOW,aAAeR,EAAc,WACpCH,EAAOY,YAAcT,EAAc,eACnCH,EAAOa,WAAaV,EAAc,SAZxC,SAAmBW,GACjB,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAM,OAAO,EAEvB,OAAO,EASHC,CAAUb,GAAe,WACtB,UAET,SAASc,EAAed,GACtB,MAAO,CACLe,SAAUlB,EAAOmB,iBAAmBhB,GACpCiB,UAAWpB,EAAOqB,kBAAoBlB,GACtCmB,UAAWtB,EAAOuB,gBAAkBpB,GACpCqB,UAAWxB,EAAOyB,aAAetB,IAIrCuB,EAAQC,MA3DR,SAAeC,EAAMC,GACnB,GAAoB,kBAATD,EACT,MAAM,IAAIE,UAAJ,gEAAuEF,IAE/E,GAAuB,oBAAZC,EACT,MAAM,IAAIC,UAAJ,kEAAyED,IAGjF,IAAIE,EAAWjC,EAAOkC,MAAMJ,EAAMC,GAClC,IAAKE,EAAU,MAAM,IAAIlC,MAAJ,2BAA8B+B,IACnD,OAAO,WACL,IAAMK,EAASF,EACXG,QAAQC,QAAQJ,GAAUK,KAAKtC,EAAOuC,MACtCH,QAAQC,aAAQG,GAEpB,OADAP,OAAWO,EACJL,IA6CXP,EAAQa,QAzCR,SAAiBX,EAAMzB,GACrB,MAAO,CACLyB,OACAzB,QACAqC,MAAOjC,EAAaJ,GACpBsC,KAAMvC,EAAYC,GAClBuC,QAASzB,EAAed,KAoC5BuB,EAAQzB,UAAYD,I,uCC5EpB2C,EAAOjB,QAAU,IAA0B","file":"static/js/3.dd77f524.chunk.js","sourcesContent":["/*\n ** Â© 2018 by Philipp Dunkel, Ben Noordhuis, Elan Shankar, Paul Miller\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n'use strict';\n\nif (process.platform !== 'darwin') {\n  throw new Error(`Module 'fsevents' is not compatible with platform '${process.platform}'`);\n}\n\nconst Native = require('./fsevents.node');\nconst events = Native.constants;\n\nfunction watch(path, handler) {\n  if (typeof path !== 'string') {\n    throw new TypeError(`fsevents argument 1 must be a string and not a ${typeof path}`);\n  }\n  if (typeof handler !== 'function') {\n    throw new TypeError(`fsevents argument 2 must be a function and not a ${typeof handler}`);\n  }\n\n  let instance = Native.start(path, handler);\n  if (!instance) throw new Error(`could not watch: ${path}`);\n  return () => {\n    const result = instance\n      ? Promise.resolve(instance).then(Native.stop)\n      : Promise.resolve(undefined);\n    instance = undefined;\n    return result;\n  };\n}\n\nfunction getInfo(path, flags) {\n  return {\n    path,\n    flags,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags)\n  };\n}\n\nfunction getFileType(flags) {\n  if (events.ItemIsFile & flags) return 'file';\n  if (events.ItemIsDir & flags) return 'directory';\n  if (events.ItemIsSymlink & flags) return 'symlink';\n}\nfunction anyIsTrue(obj) {\n  for (let key in obj) {\n    if (obj[key]) return true;\n  }\n  return false;\n}\nfunction getEventType(flags) {\n  if (events.ItemRemoved & flags) return 'deleted';\n  if (events.ItemRenamed & flags) return 'moved';\n  if (events.ItemCreated & flags) return 'created';\n  if (events.ItemModified & flags) return 'modified';\n  if (events.RootChanged & flags) return 'root-changed';\n  if (events.ItemCloned & flags) return 'cloned';\n  if (anyIsTrue(flags)) return 'modified';\n  return 'unknown';\n}\nfunction getFileChanges(flags) {\n  return {\n    inode: !!(events.ItemInodeMetaMod & flags),\n    finder: !!(events.ItemFinderInfoMod & flags),\n    access: !!(events.ItemChangeOwner & flags),\n    xattrs: !!(events.ItemXattrMod & flags)\n  };\n}\n\nexports.watch = watch;\nexports.getInfo = getInfo;\nexports.constants = events;\n","module.exports = __webpack_public_path__ + \"static/media/fsevents.1f4bd247.node\";"],"sourceRoot":""}