{"version":3,"sources":["themes/muiTheme.tsx","themes/styledComponentsTheme.tsx","themes/ThemeProvider.tsx","repository/sketch/redux/actions.ts","repository/sketch/sketchRepository.ts","repository/sketch/index.js","repository/sketch/redux/reducer.ts","repository/sketch/redux/operations.ts","repository/sketch/redux/selectors.ts","repository/sketch/redux/index.ts","redux/rootReducer.js","features/toolbar/views/toolbar/toolbar.tsx","features/toolbar/index.js","features/toolbar/views/toolbar/index.js","common/FabAdd/FabAdd.tsx","features/sidebar/views/SketchRow/sketchRow.tsx","features/sidebar/views/SketchRow/index.js","features/sidebar/views/sketchList/sketchList.tsx","features/sidebar/views/sketchList/index.js","features/sidebar/views/sidebar/sidebar.tsx","features/sidebar/index.js","features/sidebar/views/sidebar/index.js","features/editor/customSimpleEditor/highlight.js","features/editor/customSimpleEditor/CustomSimpleEditor.tsx","features/editor/editor.tsx","features/editor/index.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["muiTheme","createMuiTheme","palette","type","primary","main","secondary","error","success","background","default","blueGrey","paper","theme","list","hover","ThemeProvider","props","styledComponentsTheme","children","setSketches","sketches","payload","_sketches","id","name","code","SketchRepository","reduce","prevMax","sketch","push","INITIAL_STATE","Repository","getAll","activeSketchId","getInitialState","getSketches","dispatch","Actions","newSketch","create","updateCode","newCode","setActiveSketch","activeSketch","state","find","s","reducer","action","filter","map","combineReducers","sketchStore","sketchReducer","Container","styled","div","Title","Toolbar","className","connect","Selectors","FabAdd","other","Fab","selected","Name","SketchRow","renderCount","this","onClick","React","Component","ListContainer","SketchList","i","key","selectedSketchId","setSelected","Operations","Sidebar","size","addSketch","highlightFn","highlight","languages","js","CustomSimpleEditor","value","onValueChange","padding","style","fontFamily","fontSize","color","width","height","Div","Editor","App","store","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6fb4e207.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\n\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n\n    primary: { main: '#89FFF5' },\n    secondary: { main: '#1A4CAF' },\n    error: { main: '#9B1D20' },\n    success: { main: '#98CE5A' },\n    background: {\n      default: blueGrey[900],\n      paper: blueGrey[700],\n    },\n  }\n});\n\nexport default muiTheme;\n","import muiTheme from './muiTheme';\n\nconst theme = {\n  palette: {\n    background: {\n      default: muiTheme.palette.background.default,\n    },\n    \n    list: {\n      background: muiTheme.palette.background.default,\n      hover: muiTheme.palette.background.paper,\n    }\n  }\n};\n\nexport default theme;\n","import React from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\n\nimport {} from 'styled-components';\n\nimport styledComponentsTheme from './styledComponentsTheme';\nimport muiTheme from './muiTheme';\n\ndeclare module 'styled-components' {\n  type Theme = typeof styledComponentsTheme;\n  export interface DefaultTheme extends Theme {}\n}\n\nconst ThemeProvider = (props : any) => {\n  return(\n    <StyledThemeProvider theme={styledComponentsTheme}>\n      <MuiThemeProvider theme={muiTheme}>\n        { props.children }\n      </MuiThemeProvider>\n    </StyledThemeProvider>\n  )\n}\n\nexport default ThemeProvider;\n","import { Sketch } from \"..\";\n\n// Types\nexport const SET_SKETCHES = 'sketches/SET_SKETCHES';\nexport const ADD_SKETCH = 'sketches/ADD_SKETCH';\nexport const REMOVE_SKETCH = 'sketches/REMOVE_SKETCH';\nexport const SET_ACTIVE = 'sketches/SET_ACTIVE';\nexport const PATCH_SKETCH = 'sketches/PATCH_SKETCH'\n\nexport interface SketchAction<TPayload> {\n  type: string;\n  payload: TPayload;\n}\n\n/// Action Creators\nexport const setSketches = (sketches: Sketch []) : SketchAction<Sketch[]> => {\n  return {\n    type: SET_SKETCHES,\n    payload: sketches,\n  }\n}\n\nexport const addSketch = (newSketch: Sketch) : SketchAction<Sketch> => {\n  return {\n    type: ADD_SKETCH,\n    payload: newSketch,\n  };\n};\n\nexport const removeSketch = (id: number) : SketchAction<number> => {\n  return {\n    type: REMOVE_SKETCH,\n    payload: id,\n  }\n}\n\nexport const setActiveSketchId = (id: number) : SketchAction<number> => {\n  return {\n    type: SET_ACTIVE,\n    payload: id,\n  }\n}\n\nexport const updateCode = (id: number, newCode: string) : SketchAction<any> => {\n  return {\n    type: PATCH_SKETCH,\n    payload: {\n      id,\n      code: newCode,\n    },\n  }\n}\n","import { Sketch } from \"./sketch\";\n\nlet _sketches : Sketch[] = [\n  {\n    id: 1,\n    name: \"Tutorial\",\n    code: \"// TODO: write a tutorial\",\n    },\n  {\n    id: 2,\n    name: \"Hello World\",\n    code: \"console.log('Hello world!');\",\n  }\n];\n\nclass SketchRepository {\n  public static getAll() : Sketch [] {\n    return [ ..._sketches ];\n  }\n\n  public static create() : number {\n    const maxId = _sketches.reduce((prevMax, sketch) => {\n      return (sketch.id > prevMax) ? sketch.id : prevMax;\n    }, 0);\n    const id = maxId + 1;\n\n    _sketches.push({\n      id: id,\n      name: `New Sketch (${id})`,\n      code: '',\n    })\n\n    return id;\n  }\n\n  public static updateCode(id: number, code: string) {\n    _sketches[id].code = code;\n  }\n}\n\nexport default SketchRepository;\n","import { Sketch } from './sketch';\nimport SketchRepository from './sketchRepository';\n\nexport { Sketch };\nexport default SketchRepository;","import { SketchStoreState } from \"./sketchStoreState\";\nimport {\n  SketchAction,\n  ADD_SKETCH, REMOVE_SKETCH, SET_ACTIVE, SET_SKETCHES, PATCH_SKETCH,\n} from \"./actions\";\n\nimport Repository from '..';\n\nconst getInitialState = () => {\n  const sketches = Repository.getAll() || [{}];\n\n  return {\n    sketches: sketches,\n    activeSketchId: sketches[0].id,\n  };\n}\n\nexport const INITIAL_STATE: SketchStoreState = getInitialState();\n\nconst reducer = (state = INITIAL_STATE, action: SketchAction<any>): SketchStoreState => {\n  switch(action.type) {\n    case SET_SKETCHES:\n      return {\n        ...state,\n        sketches: action.payload,\n      }\n    case ADD_SKETCH:\n      return {\n          ...state,\n          sketches: [...state.sketches, action.payload],\n        };\n    case REMOVE_SKETCH:\n      return {\n        ...state,\n        sketches: state.sketches.filter(s => s.id !== action.payload)\n      }\n    case SET_ACTIVE:\n      return {\n        ...state,\n        activeSketchId: action.payload,\n      }\n    case PATCH_SKETCH:\n      return {\n        ...state,\n        sketches: state.sketches.map((s) => {\n          if(s.id === action.payload.id) {\n            return {\n              ...s,\n              code: action.payload.code,\n            };\n          }\n        \n          return s;\n        }),\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as Actions from './actions';\n\nimport Repository from '..';\n\nexport const getSketches = (dispatch: Function) => () => {\n  const sketches = Repository.getAll();\n\n  dispatch(Actions.setSketches(sketches));\n}\n\nexport const newSketch = (dispatch : Function) => () => {\n  Repository.create();\n  const sketches = Repository.getAll()\n\n  dispatch(Actions.setSketches(sketches));\n};\n\nexport const updateCode = (dispatch: Function) => (id: number, code: string) => {\n  dispatch(Actions.updateCode(id, code))\n};\n\nexport const setActiveSketch = (dispatch: Function) => (id: number) => {\n  dispatch(Actions.setActiveSketchId(id));\n};\n","import { SketchStoreState } from \"./sketchStoreState\";\nimport { Sketch } from \"..\";\n\nexport function activeSketch(state: SketchStoreState) : Sketch | null {\n  return state.sketches.find((s) => s.id === state.activeSketchId) || null\n};\n","import reducer from './reducer';\nimport * as Operations from './operations';\nimport * as Selectors from './selectors';\n\nexport default reducer;\nexport { Operations, Selectors };","import { combineReducers } from 'redux';\n\nimport sketchReducer from '../repository/sketch/redux';\n\nexport default combineReducers({\n    sketchStore: sketchReducer,\n});\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  background-color: ${ props => props.theme.palette.background.default };\n\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  padding: 8px;\n  \n  font-size: 1.2em;\n  font-weight: 500;\n  color: white;\n`;\n\nconst Toolbar = (props: ToolbarProps) => {\n  return (\n    <Container className={props.className}>\n      <Title> { props?.name } </Title>\n    </Container>\n  )\n}\n\ninterface ToolbarProps {\n  className?: string;\n  name?: string;\n} \n\nexport default Toolbar;\n","import Toolbar from './views/toolbar';\n\nexport default Toolbar;","import { connect } from 'react-redux';\n\nimport { Selectors } from '../../../../repository/sketch/redux';\n\nimport Toolbar from './toolbar';\n\nconst mapStateToProps = ({sketchStore}) => ({\n  name: Selectors.activeSketch(sketchStore)?.name,\n});\n\nexport default connect(mapStateToProps)(Toolbar);","import React from 'react'\n\nimport { Fab, FabProps } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\ninterface FabAddProps extends FabProps {\n  className?: string;\n}\n\nconst FabAdd = ({ className, ...other }: FabAddProps) => (\n  <Fab className={className} {...other}>\n    <AddIcon />\n  </Fab>\n);\n\n\nexport default FabAdd;","import React from 'react'\nimport styled from 'styled-components';\n\nimport { Sketch } from '../../../../repository/sketch';\n\ninterface SketchRowProps {\n  sketch: Sketch;\n  selected?: Boolean;\n  onClick?: any;\n};\n\nconst Container = styled('div')<{selected?: Boolean} & React.HTMLAttributes<HTMLDivElement>>`\n  width: 100%;\n  min-height: 48px;\n\n  color: white;\n  cursor: pointer;\n\n  background-color: ${({selected, theme}) => (\n    selected ?\n      theme.palette.list.hover\n      : theme.palette.list.background\n  )};\n\n  :hover {\n    background-color: ${ props => props.theme.palette.list.hover };\n  }\n`;\n\nconst Name = styled.div`\n  padding: 6px;\n  padding-left: 8px;\n\n  color: white;\n  font-size: 1em;\n  font-weight: 500;\n`;\n\nclass SketchRow extends React.Component<SketchRowProps> {\n  renderCount : number = 0;\n\n  render() {\n    this.renderCount += 1;\n\n    return (\n      <Container onClick={this.props.onClick} selected={this.props.selected}>\n        <Name>{this.props.sketch.name}</Name>\n      </Container>\n    )\n  };\n\n}\n\nexport default SketchRow;\n","import SketchRow from './sketchRow';\n\nexport default SketchRow;","import React from 'react'\n\nimport SketchRow from '../SketchRow';\nimport { Sketch } from '../../../../repository/sketch';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  height: 100%;\n  overflow-y: auto;\n`;\n\nexport const SketchList = (props: SketchListProps) => {\n  return (\n    <ListContainer>\n      <div>\n        {props.sketches?.map((s, i) => (\n          <SketchRow\n            sketch={s} key={i}\n            selected={ s.id === props.selectedSketchId }\n            onClick={() => props.setSelected(s.id)}\n          />\n        ))}\n      </div>\n    </ListContainer>\n  )\n}\n\ninterface SketchListProps {\n  sketches: Sketch[];\n  selectedSketchId: number;\n  setSelected: (id: number) => void;\n}\n\nexport default SketchList;\n","import { connect } from 'react-redux';\n\nimport SketchList from './sketchList';\n\nimport { Operations } from '../../../../repository/sketch/redux';\n\nconst mapStateToProps = ({ sketchStore }) => ({\n  sketches: sketchStore.sketches,\n  selectedSketchId: sketchStore.selectedSketchId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelected: (id) => Operations.setActiveSketch(dispatch)(id),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SketchList);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { FabAdd } from '../../../../common';\n\nimport SketchList from '../sketchList';\n\nconst Container = styled.div`\n  position: relative;\n  height: 100%;\n  overflow-y: hidden;\n\n  background-color: ${ props => props.theme.palette.background.default };\n\n  .fab {\n    position: absolute;\n    bottom: 48px;\n    right: 36px;\n    \n    padding: 10px;\n  }\n`;\n\nclass Sidebar extends React.Component {\n  props: SidebarProps;\n  \n  constructor(props: SidebarProps) {\n    super(props);\n    this.props = props;\n\n    this.props.getSketches();\n  }\n\n  render() {\n    return (\n      <Container className={this.props.className}>\n        <SketchList />\n\n        <FabAdd\n          className=\"fab\"\n          size=\"small\"\n          onClick={ () => this.props.addSketch() }\n        />\n      </Container>\n    );\n  }\n}\n\ninterface SidebarProps {\n  className: string;\n  addSketch: () => void;\n  getSketches: () => void;\n}\n\nexport default Sidebar;\n","import Sidebar from './views/sidebar';\n\nexport default Sidebar;\n","import { connect } from 'react-redux';\n\nimport Sidebar from './sidebar';\nimport { Operations } from '../../../../repository/sketch/redux';\n\nconst mapStateToProps = ({ sketchStore }) => ({\n  sketches: sketchStore.sketches,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addSketch: Operations.newSketch(dispatch),\n  getSketches: Operations.getSketches(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import { highlight, languages } from 'prismjs/components/prism-core';\n\nconst highlightFn = code => highlight(code, languages.js);\n\nexport default highlightFn;","import React from 'react'\n\nimport ReactSimpleCodeEditor from 'react-simple-code-editor';\nimport highlight from './highlight';\n\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\n\nimport './prism.css';\n\n\ninterface CustomSimpleEditorProps {\n  value?: string;\n  onValueChange: (value: string) => void;\n}\n\nexport const CustomSimpleEditor = (props: CustomSimpleEditorProps) => {\n  return (\n    <ReactSimpleCodeEditor\n      value={props.value || ''}\n      onValueChange={props.onValueChange}\n      highlight={highlight}\n      padding={10}\n      style={{\n        fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n        fontSize: 12,\n        color: 'white',\n        width: '100%',\n        height: '100%',\n      }}\n    />\n  )\n}\n\nexport default CustomSimpleEditor;\n","import React, { Component } from 'react'\nimport styled from 'styled-components';\n\nimport CustomSimpleEditor from './customSimpleEditor/CustomSimpleEditor';\nimport { Sketch } from '../../repository/sketch';\n\ninterface EditorProps {\n  className?: string;\n  count?: number;\n  sketch?: Sketch;\n  updateCode: (id: number, value: string) => void;\n}\n\nconst Div = styled.div`\n  background-color: ${ props => props.theme.palette.background.default };\n`;\n\nclass Editor extends Component<EditorProps> {\n  render() {\n    return (\n      <Div className={this.props.className}>\n        <CustomSimpleEditor\n          value = {this.props?.sketch?.code}\n          onValueChange = {(value) => {\n            let id = this.props.sketch?.id;\n            if(id) {\n              this.props.updateCode(id, value);\n            }\n          }}\n        />\n      </Div>\n    )\n  }\n}\n\nexport default Editor;\n","import { connect } from 'react-redux';\n\nimport { Selectors, Operations } from '../../repository/sketch/redux';\n\nimport Editor from './editor';\n\nconst mapStateToProps = ({ sketchStore }) => ({\n  sketch: Selectors.activeSketch(sketchStore),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCode: Operations.updateCode(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ThemeProvider from './themes/ThemeProvider';\n\nimport configureStore from './redux/store';\n\nimport Toolbar from './features/toolbar';\nimport Sidebar from './features/sidebar';\nimport Editor from './features/editor';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={configureStore()}>\n      <ThemeProvider>\n        <div className=\"App\">\n          <Toolbar className=\"toolbar\" />\n          \n          <Editor className=\"editor\"/>\n          <Sidebar className=\"sidebar\" />\n        </div>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nexport default function configureStore() {\n    return createStore(rootReducer);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}